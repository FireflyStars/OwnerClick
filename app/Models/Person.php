<?php

namespace App\Models;

use App\Events\PersonCreated;
use App\Events\PersonDeleted;
use App\Events\PersonUpdated;
use App\Scopes\OwnerScope;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;

class Person extends Model
{
    /**
     * The table associated with the model.
     *
     * @var string
     */
    protected $table = 'persons';
    protected $fillable = [
        'type_id', 'creator_id', 'user_id', 'name', 'address', 'identification_number', 'authorized_person', 'authorized_person_phone', 'status_id'
    ];

    protected $primaryKey = 'id';

    const PERSONS_TYPE_NATURAL_PERSON = 1;
    const PERSONS_TYPE_CORPORATION = 2;

    const PERSONS_STATUS_ACTIVE = 1;
    const PERSONS_STATUS_PASSIVE = 0;

    protected static function booted()
    {
        static::addGlobalScope(new OwnerScope);
    }

    protected $dispatchesEvents = [
        'created' => PersonCreated::class,
        'updated' => PersonUpdated::class,
        'deleted' => PersonDeleted::class
    ];


    function getType($badge = false)
    {

        $name = Person::getTypes()[$this->type_id]['name'];
        if ($badge) {
            $result = "<span class='badge badge-info'>$name</span>";
        } else {
            $result = $name;
        }
        return $result;

    }

    static function getTypes()
    {
        $types = [
            self::PERSONS_TYPE_NATURAL_PERSON => [
                'id' => self::PERSONS_TYPE_NATURAL_PERSON,
                'name' => __('dashboard.real_person')],
            self::PERSONS_TYPE_CORPORATION => [
                'id' => self::PERSONS_TYPE_CORPORATION,
                'name' => __('dashboard.legal_person')],
        ];

        return $types;
    }


    function getStatus($badge = false)
    {
        switch ($this->status_id) {
            case self::PERSONS_STATUS_PASSIVE:
                $name = __('dashboard.old');
                $badgeClass = 'badge-secondary';
                break;
            case self::PERSONS_STATUS_ACTIVE:
                $name = __('dashboard.active');
                $badgeClass = 'badge-success';
                break;
        }

        if ($badge) {
            $result = "<span class='badge $badgeClass'>$name</span>";
        } else {
            $result = $name;
        }

        return $result;
    }

    public static function yoursBadge($id, $badge = false)
    {
        if ($id == Auth::id()) {
            if ($badge) {
                return " <span class='badge badge-warning'>".__('dashboard.your')."</span>";
            } else {
                return __('dashboard.your');
            }
        }
    }


    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasOne
     */
    public function creator()
    {
        return $this->hasOne('App\Models\User', 'id', 'creator_id');
    }

    public function delete()
    {
        if($this->id !== Auth::id()) {
            return parent::delete(); // TODO: Change the autogenerated stub
        }
    }

}
